services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy:latest
    container_name: nginx-proxy
    restart: unless-stopped
    labels:
      - "com.github.nginx-proxy.nginx=true"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/certs:/etc/nginx/certs:rw
      - ./nginx/vhost:/etc/nginx/vhost.d
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/dhparam:/etc/nginx/dhparam
      - ./nginx/conf.d:/etc/nginx/conf.d
    environment:
      - ENABLE_IPV6=true
    networks:
      - proxy_network

  acme-companion:
    image: nginxproxy/acme-companion:latest
    container_name: acme-companion
    restart: unless-stopped
    depends_on:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./nginx/certs:/etc/nginx/certs:rw
      - ./nginx/vhost:/etc/nginx/vhost.d
      - ./nginx/html:/usr/share/nginx/html
    environment:
      - DEFAULT_EMAIL=<PLACEHOLDER>             # name@example.com
      - NGINX_PROXY_CONTAINER=nginx-proxy
    networks:
      - proxy_network

  lnkbrd:
    image: ghcr.io/hirebarend/lnkbrd:main
    container_name: lnkbrd
    restart: unless-stopped
    environment:
      - LETSENCRYPT_HOST=<PLACEHOLDER>          # yourdomain.com
      - HOST=<PLACEHOLDER>                      # yourdomain.com
      - MONGODB_CONNECTION_STRING=mongodb://root:P%40ssword%21@mongo:27017/
      - MONGODB_DATABASE_NAME=lnkbrd
      # - POSTHOG_API_KEY=<PLACEHOLDER>
      - VIRTUAL_HOST=<PLACEHOLDER>              # yourdomain.com
      - VIRTUAL_PORT=8080
      # - SECRET=<PLACEHOLDER>
    depends_on:
      - mongodb
    networks:
      - proxy_network

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: P@ssword!
      MONGO_INITDB_DATABASE: lnkbrd
    volumes:
      - ./data/mongo:/data/db
    networks:
      - proxy_network

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=900

networks:
  proxy_network:
    driver: bridge
